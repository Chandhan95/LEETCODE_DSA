def infix_prefix(expression):
    expression=expression[::-1]
    new_exp=""
    def infix_postfix(expression):
        stack=[]
        priority={
            '+':1,'-':1,'/':2,'*':2,'^':3
        }
        ans=""
        for ch in expression:
            if ch.isalnum():
                ans+=ch
            elif ch=='(':
                stack.append(ch)
            elif ch==')':
                while stack and stack[-1]!='(':
                    ans+=stack.pop()
                stack.pop()
            else:
               while stack and stack[-1] != '(' and (
                precedence.get(ch,0) < precedence.get(stack[-1],0) and ch != '^'
            ):
                    ans+=stack.pop()
                stack.append(ch)
        while stack:
            ans+=stack.pop()
        return ans
    for ch in expression:
        if ch=='(':
            new_exp+=')'
        elif ch==')':
            new_exp+='('
        else:
            new_exp+=ch
    expression=new_exp
    postfix=infix_postfix(expression)
    return postfix[::-1]
    
expression=input()
print(infix_prefix(expression))